
import java.awt.Color;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author USER
 */
public class PROPERTY_WINDOW extends javax.swing.JFrame {

    /**
     * Creates new form PROPERTY_WINDOW
     */
    P_TYPE type = new P_TYPE();
    HashMap<String, Integer> map = type.getTypesMap();

    public PROPERTY_WINDOW() {
        initComponents();

        Border panel_title_border = BorderFactory.createMatteBorder(0, 0, 3, 0, new Color(26, 138, 32));
        jPanel_Title.setBorder(panel_title_border);

        Border button_border = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(255, 255, 255));
        Add_Property.setBorder(button_border);
        Edit_Property.setBorder(button_border);
        Remove_Property.setBorder(button_border);
        Show_Properties.setBorder(button_border);

        bindCombo();

    }

    public void bindCombo() {
        for (String s : map.keySet()) {
            Type.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel_Title = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        Edit_Property = new javax.swing.JButton();
        Remove_Property = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtOwnerId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSquareFeet = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Add_Property = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        Type = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        bedRooms = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        ageOfTheHouse = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        bathRooms = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        balcony = new javax.swing.JCheckBox();
        pool = new javax.swing.JCheckBox();
        backyard = new javax.swing.JCheckBox();
        garage = new javax.swing.JCheckBox();
        txtPrice = new javax.swing.JTextField();
        Show_Properties = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(75, 192, 18));

        jPanel_Title.setBackground(new java.awt.Color(65, 160, 10));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Property");

        javax.swing.GroupLayout jPanel_TitleLayout = new javax.swing.GroupLayout(jPanel_Title);
        jPanel_Title.setLayout(jPanel_TitleLayout);
        jPanel_TitleLayout.setHorizontalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(392, 392, 392))
        );
        jPanel_TitleLayout.setVerticalGroup(
            jPanel_TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("ID:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Address:");

        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        Edit_Property.setBackground(new java.awt.Color(0, 102, 153));
        Edit_Property.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Edit_Property.setForeground(new java.awt.Color(255, 255, 255));
        Edit_Property.setText("Edit");
        Edit_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Edit_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_PropertyActionPerformed(evt);
            }
        });

        Remove_Property.setBackground(new java.awt.Color(255, 51, 0));
        Remove_Property.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Remove_Property.setForeground(new java.awt.Color(255, 255, 255));
        Remove_Property.setText("Remove");
        Remove_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Remove_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_PropertyActionPerformed(evt);
            }
        });

        txtId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Bedrooms:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("OwnerId:");

        txtOwnerId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Price(usd):");

        txtSquareFeet.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Type:");

        Add_Property.setBackground(new java.awt.Color(0, 102, 0));
        Add_Property.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Add_Property.setForeground(new java.awt.Color(255, 255, 255));
        Add_Property.setText("Add");
        Add_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Add_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_PropertyActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(51, 51, 51));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        Type.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Square Feet:");

        bedRooms.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        bedRooms.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Bathrooms:");

        ageOfTheHouse.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        ageOfTheHouse.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Age of The House: ");

        bathRooms.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        bathRooms.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("* 0 means brand new");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setText("Description/Comment:");

        txtAddress.setColumns(20);
        txtAddress.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        balcony.setBackground(new java.awt.Color(75, 192, 18));
        balcony.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        balcony.setText("Balcony");

        pool.setBackground(new java.awt.Color(75, 192, 18));
        pool.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pool.setText("Pool");

        backyard.setBackground(new java.awt.Color(75, 192, 18));
        backyard.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        backyard.setText("Backyard");

        garage.setBackground(new java.awt.Color(75, 192, 18));
        garage.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        garage.setText("Garage");

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        Show_Properties.setBackground(new java.awt.Color(153, 0, 153));
        Show_Properties.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Show_Properties.setForeground(new java.awt.Color(255, 255, 255));
        Show_Properties.setText("Show Properties");
        Show_Properties.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Show_Properties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_PropertiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtOwnerId, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSquareFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ageOfTheHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bedRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bathRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(balcony)
                            .addComponent(pool)
                            .addComponent(backyard)
                            .addComponent(garage))
                        .addGap(111, 111, 111))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(Show_Properties, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addGap(129, 129, 129))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSquareFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOwnerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bedRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bathRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ageOfTheHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(balcony, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pool, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(backyard, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(garage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel11)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Show_Properties, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Edit_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_PropertyActionPerformed
        try {
            int id = Integer.valueOf(txtId.getText());
            int type = map.get(Type.getSelectedItem().toString());
            int ownerId = Integer.valueOf(txtOwnerId.getText());
            int squareFeet = Integer.valueOf(txtSquareFeet.getText());
            int bedrooms = Integer.valueOf(bedRooms.getValue().toString());
            int bathrooms = Integer.valueOf(bathRooms.getValue().toString());
            int age = Integer.valueOf(ageOfTheHouse.getValue().toString());
            boolean haveBalcony = false;
            boolean havePool = false;
            boolean haveBackyard = false;
            boolean haveGarage = false;

            if (balcony.isSelected()) {
                haveBalcony = true;
            }
            if (pool.isSelected()) {
                havePool = true;
            }
            if (backyard.isSelected()) {
                haveBackyard = true;
            }
            if (garage.isSelected()) {
                haveGarage = true;
            }

            String price = txtPrice.getText();
            String address = txtAddress.getText();
            String description = txtDescription.getText();

            P_PROPERTY property = new P_PROPERTY(id, type, squareFeet, ownerId, price, address, bedrooms, bathrooms, age, haveBalcony, havePool, haveBackyard, haveGarage, description);

            if (new P_PROPERTY().editProperty(property)) {
                JOptionPane.showMessageDialog(null, "Property Updated", "Edit property", 1);

            } else {
                JOptionPane.showMessageDialog(null, "Property NOT Updated", "Edit property", 2);


            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() + "Error", "Error", 0);
        }

    }//GEN-LAST:event_Edit_PropertyActionPerformed

    private void Remove_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_PropertyActionPerformed

        try {
            Integer propertyId = Integer.valueOf(txtId.getText());

            P_PROPERTY property = new P_PROPERTY();

            if (!txtId.getText().trim().equals("")) {

                int yes_or_no = JOptionPane.showConfirmDialog(null, "Do you want to delete this property", "Delete property", JOptionPane.YES_NO_OPTION);

                if (yes_or_no == JOptionPane.YES_OPTION) {
                    if (property.removeProperty(propertyId)) {

                        JOptionPane.showMessageDialog(null, "Property Deleted", "Delete property", 1);
                        
                        txtId.setText("");
                        txtAddress.setText("");
                        txtDescription.setText("");
                        txtPrice.setText("");
                        txtSquareFeet.setText("");
                        txtOwnerId.setText("");
                        Type.setSelectedIndex(0);
                        bedRooms.setValue(0);
                        bathRooms.setValue(0);
                        ageOfTheHouse.setValue(0);
                        balcony.setSelected(false);
                        pool.setSelected(false);
                        backyard.setSelected(false);
                        garage.setSelected(false);
                


                    } else {
                        JOptionPane.showMessageDialog(null, "Operation Failed", "Delete property", 2);

                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Enter The property Id", "Empty propertyId", 2);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() + "Enter a Valid property Id", "Invalid Id", 0);

        }


    }//GEN-LAST:event_Remove_PropertyActionPerformed

    private void Add_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_PropertyActionPerformed

        try {
            int type = map.get(Type.getSelectedItem().toString());
            int ownerId = Integer.valueOf(txtOwnerId.getText());
            int squareFeet = Integer.valueOf(txtSquareFeet.getText());
            int bedrooms = Integer.valueOf(bedRooms.getValue().toString());
            int bathrooms = Integer.valueOf(bathRooms.getValue().toString());
            int age = Integer.valueOf(ageOfTheHouse.getValue().toString());
            boolean haveBalcony = false;
            boolean havePool = false;
            boolean haveBackyard = false;
            boolean haveGarage = false;

            if (balcony.isSelected()) {
                haveBalcony = true;
            }
            if (pool.isSelected()) {
                havePool = true;
            }
            if (backyard.isSelected()) {
                haveBackyard = true;
            }
            if (garage.isSelected()) {
                haveGarage = true;
            }

            String price = txtPrice.getText();
            String address = txtAddress.getText();
            String description = txtDescription.getText();

            P_PROPERTY property = new P_PROPERTY(0, type, squareFeet, ownerId, price, address, bedrooms, bathrooms, age, haveBalcony, havePool, haveBackyard, haveGarage, description);

            if (new P_PROPERTY().addNewProperty(property)) {
                JOptionPane.showMessageDialog(null, "New Property Added to the system", "Add property", 1);

            } else {
                JOptionPane.showMessageDialog(null, "Property NOT Added to the system", "Add property", 2);


            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() + "Error", "Error", 0);
        }

    }//GEN-LAST:event_Add_PropertyActionPerformed

    private void Show_PropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_PropertiesActionPerformed
        SHOW_PROPERTIES_WINDOW showPropertiesForm = new SHOW_PROPERTIES_WINDOW();
        showPropertiesForm.setVisible(true);
        showPropertiesForm.pack();
        showPropertiesForm.setLocationRelativeTo(null);
        showPropertiesForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
 
    }//GEN-LAST:event_Show_PropertiesActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        balcony.setSelected(false);
        pool.setSelected(false);
        backyard.setSelected(false);
        garage.setSelected(false);        
        
        try {
            int propertyId = Integer.valueOf(txtId.getText());

            P_PROPERTY property = new P_PROPERTY().findProperty(propertyId);

            if (property != null) {
                txtAddress.setText(property.getAddress());
                txtDescription.setText(property.getDescription());
                txtPrice.setText(property.getPrice());
                txtSquareFeet.setText(String.valueOf(property.getSquareFeet()));
                txtOwnerId.setText(String.valueOf(property.getOwnerId()));

                for (Object type : map.keySet()) {
                    if (map.get(type).equals(property.getType())) {
                        Type.setSelectedItem(type);
                    }
                }


                bedRooms.setValue(property.getBedrooms());
                bathRooms.setValue(property.getBathrooms());
                ageOfTheHouse.setValue(property.getAge());

                if (property.isBalcony()) {
                    balcony.setSelected(true);
                }
                if (property.isPool()) {
                    pool.setSelected(true);
                }
                if (property.isBackyard()) {
                    backyard.setSelected(true);
                }
                if (property.isGarage()) {
                    garage.setSelected(true);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Property Not Found", "Error", 0);

            }


        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() + "Error", "Error", 0);
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PROPERTY_WINDOW().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Property;
    private javax.swing.JButton Edit_Property;
    private javax.swing.JButton Remove_Property;
    private javax.swing.JButton Show_Properties;
    private javax.swing.JComboBox Type;
    private javax.swing.JSpinner ageOfTheHouse;
    private javax.swing.JCheckBox backyard;
    private javax.swing.JCheckBox balcony;
    private javax.swing.JSpinner bathRooms;
    private javax.swing.JSpinner bedRooms;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox garage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_Title;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox pool;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtOwnerId;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSquareFeet;
    // End of variables declaration//GEN-END:variables
}
